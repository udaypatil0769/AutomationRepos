<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-O4AMI07" failures="2" tests="13" name="testng.rerunfailedtest.TestExampleIRetry" time="0.047" errors="0" timestamp="2022-08-01T20:07:23 IST" skipped="8">
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testC" time="0.000">
    <skipped/>
  </testcase> <!-- testC -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testD" time="0.000">
    <skipped/>
  </testcase> <!-- testD -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testD" time="0.000">
    <failure message="expected [false] but found [true]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at testng.rerunfailedtest.TestExampleIRetry.testD(TestExampleIRetry.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:214)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
    </failure>
  </testcase> <!-- testD -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testD" time="0.000">
    <skipped/>
  </testcase> <!-- testD -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testE" time="0.000"/>
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testC" time="0.000">
    <skipped/>
  </testcase> <!-- testC -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testD" time="0.000">
    <skipped/>
  </testcase> <!-- testD -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testC" time="0.000">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testng.rerunfailedtest.TestExampleIRetry.testC(TestExampleIRetry.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:214)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
    </failure>
  </testcase> <!-- testC -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testD" time="0.000">
    <skipped/>
  </testcase> <!-- testD -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testA" time="0.047"/>
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testC" time="0.000">
    <skipped/>
  </testcase> <!-- testC -->
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testB" time="0.000"/>
  <system-out/>
  <testcase classname="testng.rerunfailedtest.TestExampleIRetry" name="testC" time="0.000">
    <skipped/>
  </testcase> <!-- testC -->
  <system-out/>
</testsuite> <!-- testng.rerunfailedtest.TestExampleIRetry -->
